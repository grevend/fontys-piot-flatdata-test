name: Data Collection

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 */6 * * *'

env:
  SERVICE_URL: ${{ secrets.SERVICE_URL }}
  DEVICE_ID: ${{ secrets.DEVICE_ID }}
  COLLECTOR_KEY: ${{ secrets.COLLECTOR_KEY }}

jobs:
  collect:
    runs-on: ubuntu-latest
    environment: collection
    steps:
      - name: Check out repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup deno 1.26.x
        uses: denoland/setup-deno@main
        with:
          deno-version: v1.26.x
      - name: Setup Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
      - run: npm i -g @squoosh/cli
      - name: Fetch data
        uses: githubocto/flat@v3
        with:
          http_url: 'https://raw.githubusercontent.com/grevend/fontys-piot-flatdata-test/main/data.json'
          downloaded_filename: 'data.json'
          postprocess: 'collect.ts'
      - name: Install Next.js
        run: npm ci
        working-directory: dashboard
      - name: Cache history snapshots
        uses: actions/cache@v3
        with:
          path: snapshots
          key: ${{ runner.os }}-data-snapshots
      - name: Parse git history
        run: deno run --allow-write --allow-run --allow-read parse-git.ts
      - name: Manage Next.js cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            ${{ github.workspace }}/dashboard/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
      - name: Generate dashboard
        run: |
          npm run build
          npm run export
        working-directory: dashboard
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./dashboard/out
  deploy:
    needs: collect
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: dashboard
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1



